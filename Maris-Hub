--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.19) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==2) then function v22()local v31=v1(v16,v19,v19);v19=v19 + 1 ;return v31;end v23=nil;function v23()local v32=0;local v33;local v34;while true do if (v32==(2 -1)) then return (v34 * (732 -476)) + v33 ;end if (v32==(568 -(367 + 201))) then v33,v34=v1(v16,v19,v19 + (929 -(214 + 713)) );v19=v19 + (3 -(878 -(282 + 595))) ;v32=2 -1 ;end end end v18=3;end if (v18==4) then function v25()local v35=v24();local v36=v24();local v37=1638 -(1523 + 114) ;local v38=(v21(v36,1 + 0 ,28 -8 ) * ((1067 -(68 + 997))^(1302 -(226 + 1044)))) + v35 ;local v39=v21(v36,91 -70 ,148 -(32 + 85) );local v40=((v21(v36,32)==(1 -0)) and  -(1 + 0 + 0)) or (1 + (997 -(915 + 82))) ;if (v39==0) then if (v38==((2709 -1752) -(892 + 65))) then return v40 * (0 -0) ;else local v76=0 -0 ;while true do if ((0 -0)==v76) then v39=351 -(87 + 263) ;v37=180 -(67 + 113) ;break;end end end elseif (v39==(1502 + 545)) then return ((v38==0) and (v40 * (((2 + 0) -1)/((0 -0) + 0)))) or (v40 * NaN) ;end return v8(v40,v39-(4065 -(4229 -(1069 + 118))) ) * (v37 + (v38/(((2164 -1210) -((1753 -951) + 150))^(139 -87)))) ;end v26=nil;function v26(v41)local v42=0 + 0 ;local v43;local v44;while true do if (v42==(1 -0)) then v43=v3(v16,v19,(v19 + v41) -(1 + 0) );v19=v19 + v41 ;v42=793 -((806 -(145 + 293)) + 423) ;end if (v42==(6 -4)) then v44={};for v77=19 -(10 + 8) , #v43 do v44[v77]=v2(v1(v3(v43,v77,v77)));end v42=11 -8 ;end if (v42==(445 -(416 + (456 -(44 + 386))))) then return v6(v44);end if (v42==(0 -0)) then v43=nil;if  not v41 then v41=v24();if (v41==(0 + 0)) then return "";end end v42=1 -0 ;end end end v18=5;end if (v18==6) then v29=nil;function v29()local v45=1551 -(226 + 1325) ;local v46;local v47;local v48;local v49;local v50;local v51;local v52;local v53;while true do if (v45==3) then v52=nil;v53=nil;v45=4 + 0 ;end if (v45==(2 + 0)) then v50=nil;v51=nil;v45=2 + 1 ;end if (v45~=1) then else v48=nil;v49=nil;v45=2;end if (v45==(8 -4)) then while true do if (v46~=2) then else local v96=0 -0 ;local v97;while true do if (v96==0) then v97=0 + 0 ;while true do if (v97~=0) then else local v109=0;while true do if (v109==(1637 -(1373 + 263))) then v97=1001 -(451 + 549) ;break;end if (v109~=(0 + 0)) then else v51=nil;v52=nil;v109=1;end end end if (v97~=1) then else v46=3;break;end end break;end end end if (v46~=3) then else v53=nil;while true do local v100=0;local v101;local v102;while true do if (v100==(1 -0)) then while true do if ((0 -0)==v101) then v102=0;while true do if (v102==(1385 -(746 + 638))) then if (v47~=(1 + 1)) then else local v111=0;local v112;local v113;while true do if (v111==(0 -0)) then v112=341 -(218 + 123) ;v113=nil;v111=1;end if (v111~=1) then else while true do if ((1581 -(1535 + 46))==v112) then v113=0 + 0 ;while true do local v287=0;while true do if ((0 + 0)==v287) then if (v113~=0) then else local v297=560 -(306 + 254) ;while true do if (v297~=(1 + 0)) then else v113=1 -0 ;break;end if (v297~=(1467 -(899 + 568))) then else for v301=1 + 0 ,v24() do local v302=0 -0 ;local v303;local v304;while true do if (v302~=(604 -(268 + 335))) then else while true do if (v303==0) then v304=v22();if (v21(v304,1,1)~=0) then else local v315=290 -(60 + 230) ;local v316;local v317;local v318;local v319;while true do if (2==v315) then while true do if (v316==3) then if (v21(v318,3,575 -(426 + 146) )==1) then v319[1 + 3 ]=v53[v319[1460 -(282 + 1174) ]];end v48[v301]=v319;break;end if (v316~=(813 -(569 + 242))) then else if (v21(v318,2 -1 ,1 + 0 )~=(1025 -(706 + 318))) then else v319[1253 -(721 + 530) ]=v53[v319[1273 -(945 + 326) ]];end if (v21(v318,4 -2 ,2 + 0 )==(701 -(271 + 429))) then v319[3 + 0 ]=v53[v319[3]];end v316=1503 -(1408 + 92) ;end if (1==v316) then local v321=0;while true do if (v321~=(1087 -(461 + 625))) then else v316=1290 -(993 + 295) ;break;end if (v321~=0) then else v319={v23(),v23(),nil,nil};if (v317==(0 + 0)) then local v329=0 + 0 ;while true do if (v329~=0) then else v319[1 + 2 ]=v23();v319[4]=v23();break;end end elseif (v317==1) then v319[3]=v24();elseif (v317==(1 + 1)) then v319[532 -(406 + 123) ]=v24() -(2^16) ;elseif (v317==3) then local v334=0;local v335;while true do if (0~=v334) then else v335=1769 -(1749 + 20) ;while true do if (v335==(0 + 0)) then v319[1325 -(1249 + 73) ]=v24() -(2^(6 + 10)) ;v319[4]=v23();break;end end break;end end end v321=1146 -(466 + 679) ;end end end if (v316==0) then local v322=0 -0 ;while true do if (0~=v322) then else v317=v21(v304,2,3);v318=v21(v304,4,6);v322=2 -1 ;end if (v322==(1901 -(106 + 1794))) then v316=1 + 0 ;break;end end end end break;end if ((1 + 0)==v315) then v318=nil;v319=nil;v315=5 -3 ;end if (v315==0) then v316=0 -0 ;v317=nil;v315=1;end end end break;end end break;end if (0==v302) then local v311=114 -(4 + 110) ;while true do if (v311==1) then v302=1;break;end if (v311==(584 -(57 + 527))) then local v314=1427 -(41 + 1386) ;while true do if (v314==(103 -(17 + 86))) then v303=0;v304=nil;v314=1 + 0 ;end if (v314==(1 -0)) then v311=2 -1 ;break;end end end end end end end for v305=167 -(122 + 44) ,v24() do v49[v305-1 ]=v29();end v297=1 -0 ;end end end if (v113==(3 -2)) then return v51;end break;end end end break;end end break;end end end break;end if (v102==(0 + 0)) then local v110=0;while true do if (v110==1) then v102=1;break;end if (v110==0) then if (v47==1) then local v214=0;local v215;while true do if ((0 + 0)==v214) then v215=0 -0 ;while true do if (v215~=(66 -(30 + 35))) then else local v291=0 + 0 ;while true do if (v291==0) then local v298=0;while true do if (v298==(1258 -(1043 + 214))) then v291=1;break;end if (v298~=0) then else for v307=1,v52 do local v308=0 -0 ;local v309;local v310;while true do if (v308~=0) then else local v312=0;while true do if (v312==(1212 -(323 + 889))) then v309=v22();v310=nil;v312=2 -1 ;end if (v312~=(581 -(361 + 219))) then else v308=1;break;end end end if (v308==1) then if (v309==1) then v310=v22()~=0 ;elseif (v309==(322 -(53 + 267))) then v310=v25();elseif (v309==(1 + 2)) then v310=v26();end v53[v307]=v310;break;end end end v51[3]=v22();v298=414 -(15 + 398) ;end end end if (v291==(983 -(18 + 964))) then v215=7 -5 ;break;end end end if ((2 + 0)==v215) then v47=2;break;end if (0~=v215) then else local v292=0;while true do if (v292==(1 + 0)) then v215=1;break;end if (0==v292) then v52=v24();v53={};v292=851 -(20 + 830) ;end end end end break;end end end if (v47~=0) then else local v216=0;while true do if ((1 + 0)==v216) then local v276=126 -(116 + 10) ;local v277;while true do if (v276==0) then v277=0 + 0 ;while true do if (v277~=(739 -(542 + 196))) then else v216=3 -1 ;break;end if (v277~=(0 + 0)) then else local v299=0;while true do if (v299~=(0 + 0)) then else v50={};v51={v48,v49,nil,v50};v299=1;end if (v299==1) then v277=1;break;end end end end break;end end end if (v216==(4 -2)) then v47=1;break;end if (v216==0) then local v278=0;while true do if (v278~=(1552 -(1126 + 425))) then else v216=406 -(118 + 287) ;break;end if (v278==0) then local v293=0;while true do if (v293==1) then v278=1;break;end if (v293==0) then v48={};v49={};v293=1;end end end end end end end v110=1;end end end end break;end end break;end if (v100==0) then v101=0 -0 ;v102=nil;v100=1;end end end break;end if (v46~=(1121 -(118 + 1003))) then else local v98=0;while true do if (v98==(2 -1)) then v46=378 -(142 + 235) ;break;end if (v98==(0 -0)) then v47=0 + 0 ;v48=nil;v98=978 -(553 + 424) ;end end end if (v46==(1 -0)) then local v99=0 + 0 ;while true do if ((1 + 0)~=v99) then else v46=2;break;end if (v99~=(0 + 0)) then else v49=nil;v50=nil;v99=1 + 0 ;end end end end break;end if (v45~=(0 + 0)) then else v46=0;v47=nil;v45=1;end end end v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v54)if (v1(v54,2)==79) then v20=v0(v3(v54,1,1));return "";else local v69=v2(v0(v54,16));if v20 then local v79=v5(v69,v20);v20=nil;return v79;else return v69;end end end);v18=1;end if (v18==3) then v24=nil;function v24()local v55,v56,v57,v58=v1(v16,v19,v19 + (6 -3) );v19=v19 + (11 -7) ;return (v58 * (37564907 -20787691)) + (v57 * (19058 + 46478)) + (v56 * 256) + v55 ;end v25=nil;v18=4;end if (v18==7) then function v30(v59,v60,v61)local v62=0;local v63;local v64;local v65;while true do if (v62==0) then v63=v59[1];v64=v59[2];v62=1;end if (v62==1) then v65=v59[3];return function(...)local v80=v63;local v81=v64;local v82=v65;local v83=v28;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v12("#",...) -1 ;local v89={};local v90={};for v94=0,v88 do if (v94>=v82) then v86[v94-v82 ]=v87[v94 + 1 ];else v90[v94]=v87[v94 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do local v95=0;while true do if (v95==0) then v92=v80[v84];v93=v92[1];v95=1;end if (1==v95) then if (v93<=25) then if (v93<=12) then if (v93<=5) then if (v93<=2) then if (v93<=0) then local v114=0;local v115;local v116;local v117;while true do if (v114==2) then for v232=1,v92[4] do v84=v84 + 1 ;local v233=v80[v84];if (v233[1]==18) then v117[v232-1 ]={v90,v233[3]};else v117[v232-1 ]={v60,v233[3]};end v89[ #v89 + 1 ]=v117;end v90[v92[2]]=v30(v115,v116,v61);break;end if (v114==1) then v117={};v116=v10({},{__index=function(v235,v236)local v237=v117[v236];return v237[1][v237[2]];end,__newindex=function(v238,v239,v240)local v241=v117[v239];v241[1][v241[2]]=v240;end});v114=2;end if (v114==0) then v115=v81[v92[3]];v116=nil;v114=1;end end elseif (v93==1) then v90[v92[2]]();else v84=v92[3];end elseif (v93<=3) then v90[v92[2]]=v90[v92[3]];elseif (v93==4) then v90[v92[2]][v92[3]]=v90[v92[4]];else v90[v92[2]][v92[3]]=v92[4];end elseif (v93<=8) then if (v93<=6) then local v120=0;local v121;local v122;local v123;local v124;while true do if (2==v120) then for v243=v121,v85 do v124=v124 + 1 ;v90[v243]=v122[v124];end break;end if (v120==1) then v85=(v123 + v121) -1 ;v124=0;v120=2;end if (v120==0) then v121=v92[2];v122,v123=v83(v90[v121](v13(v90,v121 + 1 ,v92[3])));v120=1;end end elseif (v93>7) then local v159=v92[2];v90[v159]=v90[v159](v13(v90,v159 + 1 ,v92[3]));else v90[v92[2]]=v30(v81[v92[3]],nil,v61);end elseif (v93<=10) then if (v93==9) then local v162=0;local v163;while true do if (v162==0) then v163=v92[2];v90[v163]=v90[v163]();break;end end else local v164=0;local v165;while true do if (v164==0) then v165=v92[2];v90[v165]=v90[v165](v13(v90,v165 + 1 ,v85));break;end end end elseif (v93>11) then local v166=v92[2];v90[v166]=v90[v166]();else local v168=v92[2];v90[v168]=v90[v168](v13(v90,v168 + 1 ,v85));end elseif (v93<=18) then if (v93<=15) then if (v93<=13) then v90[v92[2]][v92[3]]=v92[4];elseif (v93>14) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=16) then local v127=v81[v92[3]];local v128;local v129={};v128=v10({},{__index=function(v141,v142)local v143=0;local v144;while true do if (v143==0) then v144=v129[v142];return v144[1][v144[2]];end end end,__newindex=function(v145,v146,v147)local v148=v129[v146];v148[1][v148[2]]=v147;end});for v150=1,v92[4] do v84=v84 + 1 ;local v151=v80[v84];if (v151[1]==18) then v129[v150-1 ]={v90,v151[3]};else v129[v150-1 ]={v60,v151[3]};end v89[ #v89 + 1 ]=v129;end v90[v92[2]]=v30(v127,v128,v61);elseif (v93>17) then v90[v92[2]]=v90[v92[3]];else local v172=v92[2];v90[v172](v13(v90,v172 + 1 ,v92[3]));end elseif (v93<=21) then if (v93<=19) then local v131=v92[3];local v132=v90[v131];for v153=v131 + 1 ,v92[4] do v132=v132   .. v90[v153] ;end v90[v92[2]]=v132;elseif (v93>20) then local v173=v92[2];local v174={};for v222=1, #v89 do local v223=v89[v222];for v249=0, #v223 do local v250=0;local v251;local v252;local v253;while true do if (0==v250) then v251=v223[v249];v252=v251[1];v250=1;end if (v250==1) then v253=v251[2];if ((v252==v90) and (v253>=v173)) then v174[v253]=v252[v253];v251[1]=v174;end break;end end end end elseif ((v92[3]=="_ENV") or (v92[3]=="getfenv")) then v90[v92[2]]=v61;else v90[v92[2]]=v61[v92[3]];end elseif (v93<=23) then if (v93>22) then local v175=v92[2];local v176={};for v224=1, #v89 do local v225=v89[v224];for v257=0, #v225 do local v258=v225[v257];local v259=v258[1];local v260=v258[2];if ((v259==v90) and (v260>=v175)) then v176[v260]=v259[v260];v258[1]=v176;end end end else v90[v92[2]]=v30(v81[v92[3]],nil,v61);end elseif (v93>24) then v90[v92[2]]=v90[v92[3]][v92[4]];else v90[v92[2]]=v60[v92[3]];end elseif (v93<=38) then if (v93<=31) then if (v93<=28) then if (v93<=26) then if ((v92[3]=="_ENV") or (v92[3]=="getfenv")) then v90[v92[2]]=v61;else v90[v92[2]]=v61[v92[3]];end elseif (v93>27) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else local v185=v92[3];local v186=v90[v185];for v226=v185 + 1 ,v92[4] do v186=v186   .. v90[v226] ;end v90[v92[2]]=v186;end elseif (v93<=29) then v90[v92[2]]=v92[3];elseif (v93>30) then for v227=v92[2],v92[3] do v90[v227]=nil;end else v84=v92[3];end elseif (v93<=34) then if (v93<=32) then local v136=0;local v137;while true do if (v136==0) then v137=v92[2];v90[v137](v90[v137 + 1 ]);break;end end elseif (v93==33) then v90[v92[2]][v92[3]]=v90[v92[4]];else local v191=v92[2];local v192=v90[v92[3]];v90[v191 + 1 ]=v192;v90[v191]=v192[v92[4]];end elseif (v93<=36) then if (v93>35) then do return;end elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>37) then local v196=0;local v197;local v198;while true do if (1==v196) then v90[v197 + 1 ]=v198;v90[v197]=v198[v92[4]];break;end if (v196==0) then v197=v92[2];v198=v90[v92[3]];v196=1;end end else v90[v92[2]]={};end elseif (v93<=44) then if (v93<=41) then if (v93<=39) then local v138=v92[2];v90[v138](v90[v138 + 1 ]);elseif (v93==40) then v90[v92[2]]();else do return;end end elseif (v93<=42) then v90[v92[2]]=v60[v92[3]];elseif (v93>43) then v90[v92[2]]=v90[v92[3]][v92[4]];else local v202=0;local v203;while true do if (0==v202) then v203=v92[2];v90[v203]=v90[v203](v13(v90,v203 + 1 ,v92[3]));break;end end end elseif (v93<=47) then if (v93<=45) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==46) then v90[v92[2]]=v92[3];elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=49) then if (v93>48) then local v207=0;local v208;local v209;local v210;local v211;while true do if (v207==1) then v85=(v210 + v208) -1 ;v211=0;v207=2;end if (v207==0) then v208=v92[2];v209,v210=v83(v90[v208](v13(v90,v208 + 1 ,v92[3])));v207=1;end if (v207==2) then for v284=v208,v85 do v211=v211 + 1 ;v90[v284]=v209[v211];end break;end end else v90[v92[2]]={};end elseif (v93>50) then local v213=v92[2];v90[v213](v13(v90,v213 + 1 ,v92[3]));else for v230=v92[2],v92[3] do v90[v230]=nil;end end v84=v84 + 1 ;break;end end end end;end end end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v66,v67,v68)if v68 then local v70=0 -0 ;local v71;while true do if (v70==(753 -(239 + 514))) then v71=(v66/((1 + 1)^(v67-(1330 -(797 + 532)))))%((2 + 0)^(((v68-(1 + 0)) -(v67-1)) + 1)) ;return v71-(v71%(1 + 0)) ;end end else local v72=(4 -2)^(v67-((2184 -981) -(373 + 829))) ;return (((v66%(v72 + v72))>=v72) and (732 -(476 + 255))) or (1130 -(369 + 761)) ;end end v22=nil;v18=2;end end end vv9(),...);
