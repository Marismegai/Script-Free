--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.19) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v69=0;while true do if (v69==0) then v19=v0(v3(v30,1,1));return "";end end else local v70=v2(v0(v30,16));if v19 then local v78=v5(v70,v19);v19=nil;return v78;else return v70;end end end);local function v20(v31,v32,v33)if v33 then local v71=0 -0 ;local v72;while true do if (v71==(0 -0)) then v72=(v31/((2 + 0)^(v32-1)))%(((5 -2) -1)^(((v33-(2 -1)) -(v32-((2333 -1062) -((576 -(87 + 263)) + 1044)))) + 1)) ;return v72-(v72%(620 -(555 + 64))) ;end end else local v73=931 -(857 + 74) ;local v74;while true do if (v73==((1354 -786) -(367 + (381 -(67 + 113))))) then v74=2^(v32-(928 -(214 + 713))) ;return (((v31%(v74 + v74))>=v74) and (1 + 0)) or (0 + 0) ;end end end end local function v21()local v34=0 + 0 ;local v35;while true do if (v34==(2 -1)) then return v35;end if (v34==0) then v35=v1(v16,v18,v18);v18=v18 + 1 ;v34=1 + 0 ;end end end local function v22()local v36=0 -0 ;local v37;local v38;while true do if (v36==((2 + 1) -2)) then return (v38 * 256) + v37 ;end if (v36==(0 + (0 -0))) then v37,v38=v1(v16,v18,v18 + (954 -(802 + 150)) );v18=v18 + (5 -3) ;v36=1;end end end local function v23()local v39=0;local v40;local v41;local v42;local v43;while true do if (v39==(1188 -(1069 + 118))) then return (v43 * (38062656 -21285440)) + (v42 * (205958 -140422)) + (v41 * (559 -(321 -(10 + 8)))) + v40 ;end if (v39==((0 -0) + 0)) then v40,v41,v42,v43=v1(v16,v18,v18 + (4 -1) );v18=v18 + 4 + (442 -(416 + 26)) ;v39=792 -(368 + 423) ;end end end local function v24()local v44=v23();local v45=v23();local v46=1;local v47=(v20(v45,3 -2 ,9 + 11 ) * ((3 -(886 -(261 + 624)))^(470 -(145 + (520 -227))))) + v44 ;local v48=v20(v45,451 -(44 + 386) ,31);local v49=((v20(v45,32)==(1487 -(998 + 488))) and  -(1 + 0)) or (1 + 0) ;if (v48==((1852 -(1020 + 60)) -(201 + 571))) then if (v47==(1138 -(116 + 1022))) then return v49 * (0 -0) ;else v48=1;v46=0 + (1423 -(630 + 793)) ;end elseif (v48==2047) then return ((v47==(0 -0)) and (v49 * ((3 -2)/(859 -(814 + (152 -107)))))) or (v49 * NaN) ;end return v8(v49,v48-(2520 -1497) ) * (v46 + (v47/(((4 -3) + 1)^(19 + 13 + 20)))) ;end local function v25(v50)local v51=0 -(0 -0) ;local v52;local v53;while true do if (v51==(1748 -(760 + 987))) then v52=v3(v16,v18,(v18 + v50) -(1914 -(1789 + 124)) );v18=v18 + v50 ;v51=768 -(745 + 21) ;end if (v51==3) then return v6(v53);end if (v51==(0 + 0 + 0)) then v52=nil;if  not v50 then v50=v23();if (v50==(0 -0)) then return "";end end v51=3 -(1057 -(87 + 968)) ;end if (v51==(4 -2)) then v53={};for v79=1 + 0 , #v52 do v53[v79]=v2(v1(v3(v52,v79,v79)));end v51=3 + 0 ;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v54=530 -(152 + 378) ;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v54~=2) then else v59=nil;v60=nil;v54=5 -2 ;end if (v54~=(0 -0)) then else v55=0 -0 ;v56=nil;v54=1;end if (3==v54) then v61=nil;while true do local v81=0 + 0 ;local v82;while true do if ((0 -0)==v81) then v82=0;while true do if (v82==(1251 -(721 + 530))) then local v105=0;while true do if (v105~=1) then else v82=1;break;end if (v105==(1271 -(945 + 326))) then if (v55==(0 -0)) then local v108=0 + 0 ;while true do if (v108==0) then v56={};v57={};v108=1;end if (1~=v108) then else v58={};v59={v56,v57,nil,v58};v108=2;end if (v108~=2) then else v55=1;break;end end end if (v55~=1) then else v60=v23();v61={};for v110=1,v60 do local v111=0;local v112;local v113;local v114;local v115;while true do if (v111==0) then v112=1500 -(1408 + 92) ;v113=nil;v111=1087 -(461 + 625) ;end if (v111==(1290 -(993 + 295))) then while true do if (v112==0) then local v230=0;while true do if (v230~=1) then else v112=1;break;end if (0~=v230) then else v113=0 + 0 ;v114=nil;v230=1;end end end if (v112~=1) then else v115=nil;while true do if (v113==1) then if (v114==(1172 -(418 + 753))) then v115=v21()~=(0 + 0) ;elseif (v114==2) then v115=v24();elseif (v114~=(1 + 2)) then else v115=v25();end v61[v110]=v115;break;end if (v113~=(0 + 0)) then else local v290=0 + 0 ;local v291;while true do if (v290~=(529 -(406 + 123))) then else v291=1769 -(1749 + 20) ;while true do if (v291==(1 + 0)) then v113=1;break;end if (v291==0) then v114=v21();v115=nil;v291=1323 -(1249 + 73) ;end end break;end end end end break;end end break;end if (v111~=(1 + 0)) then else v114=nil;v115=nil;v111=2;end end end v59[1148 -(466 + 679) ]=v21();v55=2;end v105=1;end end end if (v82~=(2 -1)) then else if (2==v55) then local v106=0;while true do local v107=0;while true do if (v107~=(0 -0)) then else if ((1901 -(106 + 1794))~=v106) then else return v59;end if (0~=v106) then else local v116=0;while true do if (v116==(1 + 0)) then v106=1;break;end if (v116==0) then for v231=1 + 0 ,v23() do local v232=0;local v233;local v234;local v235;while true do if (v232==0) then v233=0;v234=nil;v232=2 -1 ;end if (v232~=1) then else v235=nil;while true do if (v233~=0) then else local v303=0 -0 ;local v304;while true do if (v303==0) then v304=114 -(4 + 110) ;while true do if (v304==1) then v233=585 -(57 + 527) ;break;end if (v304==(1427 -(41 + 1386))) then local v322=103 -(17 + 86) ;while true do if (v322~=(1 + 0)) then else v304=1 -0 ;break;end if (v322~=(0 -0)) then else v234=166 -(122 + 44) ;v235=nil;v322=1 -0 ;end end end end break;end end end if (v233~=1) then else while true do if (v234==(0 -0)) then v235=v21();if (v20(v235,1,1 + 0 )==(0 + 0)) then local v316=0;local v317;local v318;local v319;local v320;while true do if ((1 -0)==v316) then v319=nil;v320=nil;v316=67 -(30 + 35) ;end if (v316==2) then while true do if (v317~=(3 + 0)) then else if (v20(v319,1260 -(1043 + 214) ,11 -8 )~=(1213 -(323 + 889))) then else v320[10 -6 ]=v61[v320[584 -(361 + 219) ]];end v56[v231]=v320;break;end if ((321 -(53 + 267))==v317) then v320={v22(),v22(),nil,nil};if (v318==0) then local v331=982 -(18 + 964) ;local v332;local v333;while true do if (v331==0) then local v336=0 -0 ;while true do if (v336==(0 + 0)) then v332=0;v333=nil;v336=1;end if (v336==(1 + 0)) then v331=851 -(20 + 830) ;break;end end end if (v331==1) then while true do if (v332==(0 + 0)) then v333=0;while true do if (v333==0) then v320[3]=v22();v320[4]=v22();break;end end break;end end break;end end elseif (v318==(127 -(116 + 10))) then v320[1 + 2 ]=v23();elseif (v318==(740 -(542 + 196))) then v320[6 -3 ]=v23() -(2^16) ;elseif (v318==(1 + 2)) then local v338=0;local v339;local v340;while true do if (v338==(0 + 0)) then v339=0 + 0 ;v340=nil;v338=1;end if (v338~=(2 -1)) then else while true do if (v339==(0 -0)) then v340=1551 -(1126 + 425) ;while true do if (v340~=0) then else v320[3]=v23() -(2^(421 -(118 + 287))) ;v320[4]=v22();break;end end break;end end break;end end end v317=2;end if (v317~=2) then else local v327=0 -0 ;while true do if (v327==1) then v317=3;break;end if (v327==(1121 -(118 + 1003))) then local v334=0 -0 ;while true do if (v334==0) then if (v20(v319,1,378 -(142 + 235) )~=1) then else v320[9 -7 ]=v61[v320[2]];end if (v20(v319,1 + 1 ,2)==1) then v320[3]=v61[v320[980 -(553 + 424) ]];end v334=1;end if (v334==1) then v327=1 -0 ;break;end end end end end if ((0 + 0)==v317) then local v328=0;while true do if (v328~=(1 + 0)) then else v317=1;break;end if (v328==(0 + 0)) then v318=v20(v235,1 + 1 ,3);v319=v20(v235,4,4 + 2 );v328=1;end end end end break;end if (0~=v316) then else v317=0;v318=nil;v316=1;end end end break;end end break;end end break;end end end for v236=2 -1 ,v23() do v57[v236-(2 -1) ]=v28();end v116=2 -1 ;end end end break;end end end end break;end end break;end end end break;end if (v54~=(1 + 0)) then else v57=nil;v58=nil;v54=9 -7 ;end end end local function v29(v62,v63,v64)local v65=0;local v66;local v67;local v68;while true do if (v65==0) then v66=v62[1];v67=v62[2];v65=1;end if (v65==1) then v68=v62[3];return function(...)local v83=v66;local v84=v67;local v85=v68;local v86=v27;local v87=1;local v88= -1;local v89={};local v90={...};local v91=v12("#",...) -1 ;local v92={};local v93={};for v97=0,v91 do if (v97>=v85) then v89[v97-v85 ]=v90[v97 + 1 ];else v93[v97]=v90[v97 + 1 ];end end local v94=(v91-v85) + 1 ;local v95;local v96;while true do local v98=0;while true do if (0==v98) then v95=v83[v87];v96=v95[1];v98=1;end if (v98==1) then if (v96<=25) then if (v96<=12) then if (v96<=5) then if (v96<=2) then if (v96<=0) then do return;end elseif (v96>1) then v93[v95[2]]=v95[3];else local v138=0;local v139;local v140;while true do if (v138==1) then for v279=v139 + 1 ,v95[4] do v140=v140   .. v93[v279] ;end v93[v95[2]]=v140;break;end if (v138==0) then v139=v95[3];v140=v93[v139];v138=1;end end end elseif (v96<=3) then v93[v95[2]]=v29(v84[v95[3]],nil,v64);elseif (v96==4) then v93[v95[2]]=v63[v95[3]];elseif (v93[v95[2]]==v95[4]) then v87=v87 + 1 ;else v87=v95[3];end elseif (v96<=8) then if (v96<=6) then local v118=0;local v119;while true do if (0==v118) then v119=v95[2];v93[v119]=v93[v119]();break;end end elseif (v96==7) then v87=v95[3];else for v202=v95[2],v95[3] do v93[v202]=nil;end end elseif (v96<=10) then if (v96==9) then local v144=0;local v145;while true do if (v144==0) then v145=v95[2];v93[v145]=v93[v145](v13(v93,v145 + 1 ,v95[3]));break;end end elseif (v93[v95[2]]==v95[4]) then v87=v87 + 1 ;else v87=v95[3];end elseif (v96>11) then do return;end else v93[v95[2]]();end elseif (v96<=18) then if (v96<=15) then if (v96<=13) then v93[v95[2]]=v95[3];elseif (v96==14) then local v146=0;local v147;while true do if (v146==0) then v147=v95[2];v93[v147]=v93[v147](v13(v93,v147 + 1 ,v88));break;end end else local v148=v95[2];local v149={};for v204=1, #v92 do local v205=0;local v206;while true do if (v205==0) then v206=v92[v204];for v292=0, #v206 do local v293=v206[v292];local v294=v293[1];local v295=v293[2];if ((v294==v93) and (v295>=v148)) then local v299=0;while true do if (v299==0) then v149[v295]=v294[v295];v293[1]=v149;break;end end end end break;end end end end elseif (v96<=16) then if v93[v95[2]] then v87=v87 + 1 ;else v87=v95[3];end elseif (v96==17) then for v207=v95[2],v95[3] do v93[v207]=nil;end elseif ((v95[3]=="_ENV") or (v95[3]=="getfenv")) then v93[v95[2]]=v64;else v93[v95[2]]=v64[v95[3]];end elseif (v96<=21) then if (v96<=19) then local v122=0;local v123;local v124;local v125;while true do if (v122==0) then v123=v84[v95[3]];v124=nil;v122=1;end if (v122==2) then for v243=1,v95[4] do local v244=0;local v245;while true do if (v244==1) then if (v245[1]==35) then v125[v243-1 ]={v93,v245[3]};else v125[v243-1 ]={v63,v245[3]};end v92[ #v92 + 1 ]=v125;break;end if (v244==0) then v87=v87 + 1 ;v245=v83[v87];v244=1;end end end v93[v95[2]]=v29(v123,v124,v64);break;end if (1==v122) then v125={};v124=v10({},{__index=function(v246,v247)local v248=0;local v249;while true do if (v248==0) then v249=v125[v247];return v249[1][v249[2]];end end end,__newindex=function(v250,v251,v252)local v253=v125[v251];v253[1][v253[2]]=v252;end});v122=2;end end elseif (v96==20) then v93[v95[2]]=v63[v95[3]];else local v153=v95[2];v93[v153](v93[v153 + 1 ]);end elseif (v96<=23) then if (v96==22) then local v154=0;local v155;local v156;local v157;local v158;while true do if (v154==0) then v155=v95[2];v156,v157=v86(v93[v155](v13(v93,v155 + 1 ,v95[3])));v154=1;end if (v154==1) then v88=(v157 + v155) -1 ;v158=0;v154=2;end if (v154==2) then for v281=v155,v88 do v158=v158 + 1 ;v93[v281]=v156[v158];end break;end end else local v159=v84[v95[3]];local v160;local v161={};v160=v10({},{__index=function(v211,v212)local v213=v161[v212];return v213[1][v213[2]];end,__newindex=function(v214,v215,v216)local v217=v161[v215];v217[1][v217[2]]=v216;end});for v219=1,v95[4] do v87=v87 + 1 ;local v220=v83[v87];if (v220[1]==35) then v161[v219-1 ]={v93,v220[3]};else v161[v219-1 ]={v63,v220[3]};end v92[ #v92 + 1 ]=v161;end v93[v95[2]]=v29(v159,v160,v64);end elseif (v96>24) then v93[v95[2]][v95[3]]=v93[v95[4]];else local v165=0;local v166;local v167;while true do if (v165==1) then v93[v166 + 1 ]=v167;v93[v166]=v167[v95[4]];break;end if (v165==0) then v166=v95[2];v167=v93[v95[3]];v165=1;end end end elseif (v96<=38) then if (v96<=31) then if (v96<=28) then if (v96<=26) then v93[v95[2]][v95[3]]=v95[4];elseif (v96>27) then v93[v95[2]]=v93[v95[3]];else local v170=v95[2];v93[v170]=v93[v170](v13(v93,v170 + 1 ,v95[3]));end elseif (v96<=29) then v93[v95[2]][v95[3]]=v95[4];elseif (v96==30) then v93[v95[2]]=v93[v95[3]][v95[4]];else local v174=v95[3];local v175=v93[v174];for v222=v174 + 1 ,v95[4] do v175=v175   .. v93[v222] ;end v93[v95[2]]=v175;end elseif (v96<=34) then if (v96<=32) then v87=v95[3];elseif (v96==33) then local v177=v95[2];v93[v177]=v93[v177](v13(v93,v177 + 1 ,v88));elseif v93[v95[2]] then v87=v87 + 1 ;else v87=v95[3];end elseif (v96<=36) then if (v96>35) then local v179=0;local v180;local v181;while true do if (v179==1) then for v284=1, #v92 do local v285=0;local v286;while true do if (v285==0) then v286=v92[v284];for v305=0, #v286 do local v306=0;local v307;local v308;local v309;while true do if (v306==0) then v307=v286[v305];v308=v307[1];v306=1;end if (v306==1) then v309=v307[2];if ((v308==v93) and (v309>=v180)) then local v321=0;while true do if (v321==0) then v181[v309]=v308[v309];v307[1]=v181;break;end end end break;end end end break;end end end break;end if (v179==0) then v180=v95[2];v181={};v179=1;end end else v93[v95[2]]=v93[v95[3]];end elseif (v96>37) then v93[v95[2]][v95[3]]=v93[v95[4]];elseif ((v95[3]=="_ENV") or (v95[3]=="getfenv")) then v93[v95[2]]=v64;else v93[v95[2]]=v64[v95[3]];end elseif (v96<=44) then if (v96<=41) then if (v96<=39) then v93[v95[2]]=v29(v84[v95[3]],nil,v64);elseif (v96==40) then local v186=0;local v187;while true do if (v186==0) then v187=v95[2];v93[v187](v13(v93,v187 + 1 ,v95[3]));break;end end else local v188=v95[2];v93[v188]=v93[v188]();end elseif (v96<=42) then local v132=v95[2];v93[v132](v13(v93,v132 + 1 ,v95[3]));elseif (v96>43) then v93[v95[2]]={};else local v191=0;local v192;while true do if (v191==0) then v192=v95[2];v93[v192](v93[v192 + 1 ]);break;end end end elseif (v96<=47) then if (v96<=45) then local v133=0;local v134;local v135;while true do if (1==v133) then v93[v134 + 1 ]=v135;v93[v134]=v135[v95[4]];break;end if (v133==0) then v134=v95[2];v135=v93[v95[3]];v133=1;end end elseif (v96>46) then v93[v95[2]]=v93[v95[3]][v95[4]];else local v195=v95[2];local v196,v197=v86(v93[v195](v13(v93,v195 + 1 ,v95[3])));v88=(v197 + v195) -1 ;local v198=0;for v228=v195,v88 do local v229=0;while true do if (v229==0) then v198=v198 + 1 ;v93[v228]=v196[v198];break;end end end end elseif (v96<=49) then if (v96==48) then if  not v93[v95[2]] then v87=v87 + 1 ;else v87=v95[3];end else v93[v95[2]]={};end elseif (v96==50) then if  not v93[v95[2]] then v87=v87 + 1 ;else v87=v95[3];end else v93[v95[2]]();end v87=v87 + 1 ;break;end end end end;end end end return v29(v28(),{},v17)(...);end vv9(),...);
